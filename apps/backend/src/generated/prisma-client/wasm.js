
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  adventurerId: 'adventurerId'
};

exports.Prisma.QuestScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  deadline: 'deadline',
  reward: 'reward',
  status: 'status',
  estimatedDuration: 'estimatedDuration',
  startDate: 'startDate',
  endDate: 'endDate',
  requiredProfiles: 'requiredProfiles',
  xpRequired: 'xpRequired',
  createdBy: 'createdBy'
};

exports.Prisma.QuestAssignmentScalarFieldEnum = {
  id: 'id',
  adventurerId: 'adventurerId',
  questId: 'questId'
};

exports.Prisma.AdventurerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  status: 'status',
  xp: 'xp',
  guildId: 'guildId'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  durability: 'durability',
  price: 'price',
  type: 'type',
  stats: 'stats',
  rarity: 'rarity',
  profiles: 'profiles'
};

exports.Prisma.GuildScalarFieldEnum = {
  id: 'id',
  name: 'name',
  bankId: 'bankId'
};

exports.Prisma.BankScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  guildId: 'guildId'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  date: 'date',
  name: 'name',
  bankId: 'bankId'
};

exports.Prisma.ItemOnQuestAssignmentScalarFieldEnum = {
  questAssignmentId: 'questAssignmentId',
  itemId: 'itemId'
};

exports.Prisma.ItemOnGuildScalarFieldEnum = {
  guildId: 'guildId',
  itemId: 'itemId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.AdventurerType = exports.$Enums.AdventurerType = {
  ARCHER: 'ARCHER',
  BARBARIAN: 'BARBARIAN',
  PALADIN: 'PALADIN',
  ARCANE_MAGE: 'ARCANE_MAGE',
  PRIEST: 'PRIEST',
  GEOMANCER: 'GEOMANCER',
  ALCHEMIST: 'ALCHEMIST',
  BLACKSMITH: 'BLACKSMITH',
  ENCHANTER: 'ENCHANTER',
  MESSENGER: 'MESSENGER'
};

exports.Role = exports.$Enums.Role = {
  AVENTURIER: 'AVENTURIER',
  ASSISTANT: 'ASSISTANT',
  CLIENT: 'CLIENT'
};

exports.QuestStatus = exports.$Enums.QuestStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.AdventurerStatus = exports.$Enums.AdventurerStatus = {
  AVAILABLE: 'AVAILABLE',
  ON_QUEST: 'ON_QUEST',
  INJURED: 'INJURED',
  DEAD: 'DEAD',
  RETIRED: 'RETIRED'
};

exports.ItemType = exports.$Enums.ItemType = {
  WEAPON: 'WEAPON',
  EQUIPMENT: 'EQUIPMENT',
  POTION: 'POTION',
  MISC: 'MISC'
};

exports.ItemRarity = exports.$Enums.ItemRarity = {
  COMMON: 'COMMON',
  UNCOMMON: 'UNCOMMON',
  RARE: 'RARE',
  EPIC: 'EPIC',
  LEGENDARY: 'LEGENDARY'
};

exports.Prisma.ModelName = {
  User: 'User',
  Quest: 'Quest',
  QuestAssignment: 'QuestAssignment',
  Adventurer: 'Adventurer',
  Item: 'Item',
  Guild: 'Guild',
  Bank: 'Bank',
  Transaction: 'Transaction',
  ItemOnQuestAssignment: 'ItemOnQuestAssignment',
  ItemOnGuild: 'ItemOnGuild'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/mattisnaud/Documents/MMAKVE/apps/backend/src/generated/prisma-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/mattisnaud/Documents/MMAKVE/apps/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma-client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Enum for adventurer type\nenum AdventurerType {\n  ARCHER\n  BARBARIAN\n  PALADIN\n  ARCANE_MAGE\n  PRIEST\n  GEOMANCER\n  ALCHEMIST\n  BLACKSMITH\n  ENCHANTER\n  MESSENGER\n}\n\n// Roles for users\nenum Role {\n  AVENTURIER\n  ASSISTANT\n  CLIENT\n}\n\nenum QuestStatus {\n  PENDING\n  APPROVED\n  IN_PROGRESS\n  COMPLETED\n  FAILED\n}\n\nenum AdventurerStatus {\n  AVAILABLE\n  ON_QUEST\n  INJURED\n  DEAD\n  RETIRED\n}\n\nenum ItemType {\n  WEAPON\n  EQUIPMENT\n  POTION\n  MISC\n}\n\nenum ItemRarity {\n  COMMON\n  UNCOMMON\n  RARE\n  EPIC\n  LEGENDARY\n}\n\nmodel User {\n  id           String      @id @default(uuid())\n  username     String      @unique\n  password     String\n  role         Role        @default(CLIENT)\n  createdAt    DateTime    @default(now())\n  adventurer   Adventurer? @relation(fields: [adventurerId], references: [id])\n  adventurerId String?     @unique\n}\n\nmodel Quest {\n  id                String            @id @default(uuid())\n  title             String\n  description       String\n  deadline          DateTime\n  reward            Int\n  status            QuestStatus       @default(PENDING)\n  estimatedDuration Int\n  startDate         DateTime?\n  endDate           DateTime?\n  requiredProfiles  AdventurerType[]\n  xpRequired        Int?\n  assignments       QuestAssignment[]\n  createdBy         String\n}\n\nmodel QuestAssignment {\n  id           String                  @id @default(uuid())\n  items        ItemOnQuestAssignment[]\n  adventurer   Adventurer              @relation(fields: [adventurerId], references: [id])\n  adventurerId String\n  quest        Quest                   @relation(fields: [questId], references: [id])\n  questId      String\n}\n\nmodel Adventurer {\n  id          String            @id @default(uuid())\n  name        String\n  type        AdventurerType\n  status      AdventurerStatus  @default(AVAILABLE)\n  xp          Int               @default(0)\n  assignments QuestAssignment[]\n  guildId     String\n  guild       Guild             @relation(\"AdventurerGuild\", fields: [guildId], references: [id])\n  user        User?\n}\n\nmodel Item {\n  id               String                  @id @default(uuid())\n  name             String\n  description      String\n  durability       Int\n  price            Int\n  type             ItemType\n  stats            String?\n  rarity           ItemRarity              @default(COMMON)\n  profiles         AdventurerType[]\n  questAssignments ItemOnQuestAssignment[]\n  guilds           ItemOnGuild[]\n}\n\nmodel Guild {\n  id          String        @id @default(uuid())\n  name        String\n  adventurers Adventurer[]  @relation(\"AdventurerGuild\")\n  bank        Bank?\n  bankId      String        @unique\n  inventory   ItemOnGuild[]\n}\n\nmodel Bank {\n  id      String        @id @default(uuid())\n  amount  Int\n  history Transaction[]\n  guild   Guild         @relation(fields: [guildId], references: [id])\n  guildId String        @unique\n}\n\nmodel Transaction {\n  id     String   @id @default(uuid())\n  amount Int\n  date   DateTime\n  name   String\n  bank   Bank     @relation(fields: [bankId], references: [id])\n  bankId String\n}\n\nmodel ItemOnQuestAssignment {\n  questAssignment   QuestAssignment @relation(fields: [questAssignmentId], references: [id])\n  questAssignmentId String\n  item              Item            @relation(fields: [itemId], references: [id])\n  itemId            String\n\n  @@id([questAssignmentId, itemId])\n}\n\nmodel ItemOnGuild {\n  guild   Guild  @relation(fields: [guildId], references: [id])\n  guildId String\n  item    Item   @relation(fields: [itemId], references: [id])\n  itemId  String\n\n  @@id([guildId, itemId])\n}\n",
  "inlineSchemaHash": "829f5f33433cc53d024c0fbd3d5916c55ab745093ea2c5469b86dd21de32d168",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adventurer\",\"kind\":\"object\",\"type\":\"Adventurer\",\"relationName\":\"AdventurerToUser\"},{\"name\":\"adventurerId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Quest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reward\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"QuestStatus\"},{\"name\":\"estimatedDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requiredProfiles\",\"kind\":\"enum\",\"type\":\"AdventurerType\"},{\"name\":\"xpRequired\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"QuestAssignment\",\"relationName\":\"QuestToQuestAssignment\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"QuestAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"ItemOnQuestAssignment\",\"relationName\":\"ItemOnQuestAssignmentToQuestAssignment\"},{\"name\":\"adventurer\",\"kind\":\"object\",\"type\":\"Adventurer\",\"relationName\":\"AdventurerToQuestAssignment\"},{\"name\":\"adventurerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quest\",\"kind\":\"object\",\"type\":\"Quest\",\"relationName\":\"QuestToQuestAssignment\"},{\"name\":\"questId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Adventurer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"AdventurerType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AdventurerStatus\"},{\"name\":\"xp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"QuestAssignment\",\"relationName\":\"AdventurerToQuestAssignment\"},{\"name\":\"guildId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guild\",\"kind\":\"object\",\"type\":\"Guild\",\"relationName\":\"AdventurerGuild\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdventurerToUser\"}],\"dbName\":null},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durability\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ItemType\"},{\"name\":\"stats\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rarity\",\"kind\":\"enum\",\"type\":\"ItemRarity\"},{\"name\":\"profiles\",\"kind\":\"enum\",\"type\":\"AdventurerType\"},{\"name\":\"questAssignments\",\"kind\":\"object\",\"type\":\"ItemOnQuestAssignment\",\"relationName\":\"ItemToItemOnQuestAssignment\"},{\"name\":\"guilds\",\"kind\":\"object\",\"type\":\"ItemOnGuild\",\"relationName\":\"ItemToItemOnGuild\"}],\"dbName\":null},\"Guild\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adventurers\",\"kind\":\"object\",\"type\":\"Adventurer\",\"relationName\":\"AdventurerGuild\"},{\"name\":\"bank\",\"kind\":\"object\",\"type\":\"Bank\",\"relationName\":\"BankToGuild\"},{\"name\":\"bankId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"ItemOnGuild\",\"relationName\":\"GuildToItemOnGuild\"}],\"dbName\":null},\"Bank\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"history\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"BankToTransaction\"},{\"name\":\"guild\",\"kind\":\"object\",\"type\":\"Guild\",\"relationName\":\"BankToGuild\"},{\"name\":\"guildId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank\",\"kind\":\"object\",\"type\":\"Bank\",\"relationName\":\"BankToTransaction\"},{\"name\":\"bankId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ItemOnQuestAssignment\":{\"fields\":[{\"name\":\"questAssignment\",\"kind\":\"object\",\"type\":\"QuestAssignment\",\"relationName\":\"ItemOnQuestAssignmentToQuestAssignment\"},{\"name\":\"questAssignmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToItemOnQuestAssignment\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ItemOnGuild\":{\"fields\":[{\"name\":\"guild\",\"kind\":\"object\",\"type\":\"Guild\",\"relationName\":\"GuildToItemOnGuild\"},{\"name\":\"guildId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToItemOnGuild\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

